version: "3.9"

services:
  mesh-cleaner-service:
    container_name: mesh-cleaner-service
    build:
      context: ./mesh-cleaner-service
    ports:
      - "${MESH_CLEANER_SERVICE_PORT}:8000"
    volumes:
      - ./mesh-cleaner-service/meshes:/app/meshes
      - ./mesh-cleaner-service:/mesh-cleaner-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
      UPLOAD_DIR: ${UPLOAD_DIR}
      OUTPUT_DIR: ${OUTPUT_DIR}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      mesh-cleaner-db:
        condition: service_healthy

  mesh-cleaner-frontend:
    container_name: mesh-cleaner-fe
    build:
      context: ./mesh-cleaner-fe
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    ports:
      - "${MESH_CLEANER_FE_PORT}:80"

  mesh-cleaner-db:
    container_name: mesh-cleaner-db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - mesh_cleaner_db_data:/var/lib/postgresql/data
    ports:
      - "${MESH_CLEANER_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
      start_period: 5s

volumes:
  mesh_cleaner_db_data:
